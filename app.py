# streamlit_page_title: Analyse des objectifs

import streamlit as st
from features_api import assistant_pedagogique, recapitulatif
from pretraitement_obj_spe import nettoyer_objectifs_specifiques
from generation_pdf import generer_pdf, llm_output_to_dict
from style_loader import load_css
import logging


logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

st.set_page_config(
    page_title="Analyse d'objectifs p√©dagogiques par IA", 
    layout="centered",
    initial_sidebar_state="collapsed"
)

# Chargement des styles CSS externes
load_css('styles.css')

# En-t√™te 
st.markdown("""
<div class="main-header">
    <h1>Analyse automatique d'objectifs p√©dagogiques</h1>
    <p>Remplissez les informations ci-dessous pour obtenir une analyse personnalis√©e de vos objectifs p√©dagogiques.</p>
</div>
""", unsafe_allow_html=True)


if "go" in st.query_params and st.query_params["go"] == "method":
    st.switch_page("pages/details_methode.py")
    
    
st.markdown("""
<div style="border-left: 4px solid #2c7be5; padding: 10px 20px; background-color: #c3cfe241; border-radius: 5px;">
<h4 style = "color: #667eea">Bienvenue sur votre outil d‚Äôanalyse et d'am√©lioration des objectifs p√©dagogiques !</h4>
<p>Cet outil est con√ßu pour vous aider √† √©valuer la qualit√© des objectifs p√©dagogiques que vous avez formul√©s pour votre cours, et √† les am√©liorer. <br>Veuillez renseigner chaque champ avec attention : √† partir de vos r√©ponses, un conseiller intelligent vous proposera un retour personnalis√© et des pistes d‚Äôam√©lioration.<br>
<em>Cela ne prend que quelques minutes !</em><br></p>
<a href="?go=method" style = "font-size: 14px">üîç Cliquez ici pour en savoir plus sur la m√©thode d‚Äôanalyse.</a>
</div>
""", unsafe_allow_html=True)


st.markdown("<br>", unsafe_allow_html=True)

with st.form("formulaire_objectifs"):

    nom_cours = st.text_input("Nom du cours", placeholder="ex: Introduction √† l'intelligence artificielle")
    st.info("üî∏ Le nom du cours doit contenir au moins 5 caract√®res.")

    niveau = st.text_input("Niveau du cours", placeholder="ex: Licence 3")
    st.info("üî∏ Le niveau du cours doit contenir au moins 2 caract√®res.")

    public = st.text_input("Public cible", placeholder="ex: √âtudiants en Intelligence Artificielle")
    st.info("üî∏ Le public cible doit contenir au moins 5 caract√®res.")

    objectif_general = st.text_area("Objectif g√©n√©ral du cours")
    st.info("üî∏ L'objectif p√©dagogique g√©n√©ral du cours doit contenir au moins 20 caract√®res.")

    objectifs_specifiques_brut = st.text_area("Objectifs sp√©cifiques")
    st.info("üî∏ Les objectifs p√©dagogiques sp√©cifiques doivent contenir au moins 20 caract√®res.")
    
    soumis = st.form_submit_button("Analyser", use_container_width=True)

if soumis:
    st.success("‚úÖ Formulaire envoy√© avec succ√®s !")
    
    # Nettoyage et transformation des objectifs sp√©cifiques en liste
    objectifs_specifiques = nettoyer_objectifs_specifiques(objectif_general, objectifs_specifiques_brut)
    st.info("‚úÖ Donn√©es valides, lancement de l'analyse...")
    
    with st.spinner('Analyse en cours, veuillez patienter...'):
        try:
            # Appel du pipeline principal
            rapport = assistant_pedagogique(nom_cours, niveau, public, objectif_general, objectifs_specifiques)
        
            st.success("Analyse termin√©e avec succ√®s !")
        except Exception as e:
            st.error(f"Une erreur est survenue pendant l'analyse. Veuillez r√©essayer.")
            logger.warning(f"Une erreur est survenue pendant l'analyse. : {str(e)}")
            st.stop()


    # R√©capitulatif
    try:
        recap = recapitulatif(rapport['details'])
        logger.info("R√©capitulatif fait !")
    except Exception as e:
        st.error(f"Un probl√®me est survenu pendant l'analyse. Veuillez r√©essayer.")
        logger.warning(f"Le r√©capitulatif a √©chou√© : {str(e)}")

    try:
        recap_dict = llm_output_to_dict(recap)
        logger.info("Conversion du r√©capitulatif faite.")
    except Exception as e:
        st.error(f"Un probl√®me est survenu pendant le r√©capitulatif de l'analyse. Veuillez r√©essayer.")
        logger.warning(f"La conversion du r√©capitulatif a √©chou√©e : {str(e)}")

    # S√©paration visuelle
    st.markdown("---")
    
    # Section r√©sultats am√©lior√©e
    st.markdown("## R√©sultats de l'analyse")
    
    # M√©triques en colonnes
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown(f"""
        <div class="metric">
            <div class="metric-titre" style="font-size: 15px">üìö Cours analys√©</div>
            <p style="font-size: 20px;">{nom_cours}</p>
        </div>""", unsafe_allow_html=True)
    with col2:
        st.markdown(f"""
        <div class="metric">
            <div class="metric-titre" style="font-size: 15px">üéØ Niveau</div>
            <p style="font-size: 20px;">{niveau}</p>
        </div>""", unsafe_allow_html=True)
    with col3:
        st.markdown(f"""
        <div class="metric">
            <div class="metric-titre" style="font-size: 15px">üë• Public cible</div>
            <p style="font-size: 20px;">{public}</p>
        </div>""", unsafe_allow_html=True)


    # Synth√®se dans une bo√Æte stylis√©e
    st.markdown("""
    <div class="resultats-section">
        <h3>Aper√ßu global</h3>
    </div>""", unsafe_allow_html=True)
    
    st.markdown(f"""
    <div class="synthese-box">
        <h4>üìÑ R√©sum√© de l'analyse</h4>
        <p style="font-size: 16px; line-height: 1.6; margin-bottom: 0;">{rapport["aper√ßu"]}</p>
    </div>
    """, unsafe_allow_html=True)

    # Rapport d√©taill√© avec onglets
    st.markdown("""
    <div class="resultats-section">
        <h3>Rapport d√©taill√©</h3>
    </div>""", unsafe_allow_html=True)
    
    st.markdown("""
    <style>
    /* Texte des onglets (non actifs) */
    .stTabs [data-baseweb="tab"] {
        color: #666666;
    }

    /* Onglet actif : texte et soulignement */
    .stTabs [data-baseweb="tab"][aria-selected="true"] {
        color: #667eea !important;
    }
    </style>
    """, unsafe_allow_html=True)

    tab1, tab2, tab3 = st.tabs(["üìã Rapport complet", "üí° Points cl√©s", "üìà Recommandations"])
    
    with tab1:
        st.markdown(f"""
        <div class="rapport-section">
            {rapport["details"]}
        </div>
        """, unsafe_allow_html=True)
    
    if not(isinstance(recap_dict, dict)):
        logger.warning("Le r√©capitulatif n'est pas un dictionnaire valide.")
        #st.stop()  
        
        with tab2:
            # Extraction des points cl√©s
            st.markdown("#### Points importants identifi√©s")
            st.info("Cette section pr√©sente les points cl√©s du rapport.")
            st.error("Le r√©capitulatif n'a pas pu √™tre g√©n√©r√© correctement.")
            
        with tab3:
            st.markdown("#### Suggestions d'am√©lioration")
            st.info("Cette section pr√©sente les recommandations prioritaires.")
                        
            with st.container():
                st.markdown("**Recommandations prioritaires :**")
                st.error("Le r√©capitulatif n'a pas pu √™tre g√©n√©r√© correctement.")
        
    else:    
        with tab2:
            # Extraction des points cl√©s
            st.markdown("#### Points importants identifi√©s")
            st.info("Cette section pr√©sente les points cl√©s du rapport.")
            
            col1, col2 = st.columns(2)
                
            points_forts = recap_dict.get('points_forts', []) 
            axes_amelioration = recap_dict.get('axes_amelioration', [])

            with col1:
                st.markdown("**‚úÖ Points forts d√©tect√©s :**")
                if points_forts:
                    for point in points_forts:
                        st.markdown(f"- {point}")
                else:
                    st.markdown("_Aucun point fort d√©tect√©._")

            with col2:
                st.markdown("**‚ö†Ô∏è Axes d'am√©lioration :**")
                if axes_amelioration:
                    for point in axes_amelioration:
                        st.markdown(f"- {point}")
                else:
                    st.markdown("_Aucun axe d'am√©lioration d√©tect√©._")
            
        with tab3:
            st.markdown("#### Suggestions d'am√©lioration")
            st.info("Cette section pr√©sente les recommandations prioritaires.")
            
            recommandation = recap_dict.get('recommandations', [])
            
            with st.container():
                st.markdown("**Recommandations prioritaires :**")
                if recommandation:
                    for point in recommandation:
                        st.markdown(f"- {point}")
                else:
                    st.markdown("_Aucune recommandation d√©tect√©e._")

    # Avertissement IA 
    st.markdown("""
    <div class="info-banner">
        <h5>‚ö† Important : Utilisation de l'IA</h5>
        <p style="margin-bottom: 0;">
        Ces recommandations sont g√©n√©r√©es automatiquement par un syst√®me d'intelligence artificielle. 
        Elles visent √† guider, non √† remplacer l'expertise p√©dagogique humaine, et doivent √™tre examin√©es avec discernement avant toute utilisation.
        </p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("---")

    # Section t√©l√©chargement stylis√©e
    st.markdown("### üì• T√©l√©charger le rapport")
    st.markdown(" ")
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        # G√©n√©ration de PDF temporaire
        chemin_pdf = generer_pdf(nom_cours, niveau, public, objectif_general, objectifs_specifiques_brut, rapport, recap_dict)
        with open(chemin_pdf, "rb") as f:
            st.download_button(
                "üìÑ T√©l√©charger le rapport PDF", 
                f, 
                file_name=f"rapport_analyse_objectifs_{nom_cours.replace(' ', '_').lower()}.pdf",
                mime="application/pdf",
                use_container_width=True
            )
    
    # Footer
    st.markdown("---")
    st.markdown(
        "<p style='text-align: center; color: gray;'>ü§ñ Analyse g√©n√©r√©e par IA ‚Ä¢ D√©velopp√© pour l'am√©lioration p√©dagogique</p>", 
        unsafe_allow_html=True
    )